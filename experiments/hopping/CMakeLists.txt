# not required if this is compiled as part of entropy
# project(mc)
# cmake_minimum_required(VERSION 3.3)
# cmake_policy(SET CMP0042 OLD)
# set(CMAKE_VERBOSE_MAKEFILE       OFF)
# set(CMAKE_BUILD_TYPE             "Debug")
# set(CMAKE_BASE_NAME              "g++")
# set(CMAKE_CXX_COMPILER           "g++")
# set(CMAKE_CXX_FLAGS_DISTRIBUTION "-O3")
# set(CMAKE_CXX_COMPILER_FULLPATH  "g++")
# set(EXECUTABLE_OUTPUT_PATH       ${PROJECT_BINARY_DIR}/bin)
# set(LIBRARY_OUTPUT_PATH          ${PROJECT_BINARY_DIR}/lib)
# set(CMAKE_CXX_FLAGS_DEBUG        "-g -arch x86_64")
# set(CMAKE_CXX_FLAGS_RELEASE      "-g -arch x86_64")
# set(CMAKE_INSTALL_PREFIX         "..")

if(APPLE)
  set(CMAKE_CXX_COMPILER           "/usr/local/opt/llvm/bin/clang++")
  set(CMAKE_CXX_COMPILER_FULLPATH  "/usr/local/opt/llvm/bin/clang++")
  link_directories(/usr/local/opt/llvm/lib)
  include_directories(/usr/local/opt/llvm/include)
  if(ENTROPY_OPENMP)
    set(CMAKE_CXX_FLAGS_DEBUG        "-g  -fopenmp")
    set(CMAKE_CXX_FLAGS_RELEASE      "-g  -fopenmp")
    set(CMAKE_CXX_FLAGS_DISTRIBUTION "-O3 -fopenmp")
  else(ENTROPY_OPENMP)
    set(CMAKE_CXX_FLAGS_DEBUG        "-g")
    set(CMAKE_CXX_FLAGS_RELEASE      "-g")
    set(CMAKE_CXX_FLAGS_DISTRIBUTION "-O3")
  endif(ENTROPY_OPENMP)
else(APPLE)
  if(ENTROPY_OPENMP)
    find_package(OpenMP)
  endif(ENTROPY_OPENMP)
  set(CMAKE_CXX_COMPILER           "g++")
  set(CMAKE_CXX_COMPILER_FULLPATH  "g++")
  set(CMAKE_CXX_FLAGS_DEBUG        "-g   ${OpenMP_CXX_FLAGS}")
  set(CMAKE_CXX_FLAGS_RELEASE      "-g   ${OpenMP_CXX_FLAGS}")
  set(CMAKE_CXX_FLAGS_DISTRIBUTION "-O3  ${OpenMP_CXX_FLAGS}")
endif(APPLE)


add_executable(hopping_mc mc.cpp)
target_link_libraries(hopping_mc Entropy++ boost_filesystem boost_system m)

# install(TARGETS hopping_mc RUNTIME DESTINATION bin)
